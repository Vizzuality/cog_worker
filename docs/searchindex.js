Search.setIndex({"docnames": ["api_reference", "cog_worker/1. worker", "cog_worker/2. manager", "cog_worker/3. distributed", "cog_worker/4. types", "examples", "examples/1. quick-start", "examples/2. tutorial", "examples/3. tile-server", "examples/4. stac-ndvi", "index", "key_concepts"], "filenames": ["api_reference.rst", "cog_worker/1. worker.rst", "cog_worker/2. manager.rst", "cog_worker/3. distributed.rst", "cog_worker/4. types.rst", "examples.rst", "examples/1. quick-start.ipynb", "examples/2. tutorial.ipynb", "examples/3. tile-server.ipynb", "examples/4. stac-ndvi.ipynb", "index.rst", "key_concepts.rst"], "titles": ["API Reference", "cog_worker.worker", "cog_worker.manager", "cog_worker.distributed", "cog_worker.types", "Examples", "Quick start", "Tutorial example", "Create a custom tile server", "Compute Sentinel-2 NDVI with Stac and Dask", "Cog Worker", "Key concepts"], "terms": {"A": [0, 1, 2, 3, 4, 6, 8, 10], "python": [0, 10], "modul": [0, 10], "scalabl": [0, 2, 6, 10], "analysi": [0, 1, 2, 3, 8, 10], "cloud": [0, 1, 2, 3, 6, 10, 11], "optim": [0, 1, 2, 3, 6, 10, 11], "geotiff": [0, 1, 2, 3, 6, 10], "cog": [0, 1, 2, 3, 4, 6, 7, 8, 11], "worker": [0, 2, 3, 4, 8, 9], "i": [0, 1, 2, 3, 4, 6, 7, 10], "simpl": [0, 6, 8, 10], "librari": [0, 6, 7, 10], "help": [0, 6, 10], "you": [0, 1, 2, 3, 6, 7, 8, 10, 11], "chunk": [0, 2, 3, 4, 10], "run": [0, 2, 3, 7, 10], "larg": [0, 2], "scale": [0, 1, 2, 3, 4, 7, 8, 10, 11], "cog_work": [0, 7, 8, 10, 11], "__init__": [0, 1, 2, 3, 8], "bound": [0, 1, 2, 3, 4, 6, 7, 8], "buffer": [0, 1, 2, 3, 6, 7, 8, 11], "clip_buff": [0, 1], "empti": [0, 1], "height": [0, 1, 2, 8], "lnglat_bound": [0, 1], "proj": [0, 1, 2, 3, 6, 7, 8, 10], "read": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11], "width": [0, 1, 2, 8], "write": [0, 1, 2, 3, 4, 10], "xy_bound": [0, 1, 8], "manag": [0, 3, 4, 6, 7, 10, 11], "chunk_execut": [0, 2, 3, 6], "chunk_param": [0, 2, 6], "chunk_sav": [0, 2, 6, 7, 10], "execut": [0, 2, 3, 4, 6, 8, 10], "preview": [0, 2, 6, 10, 11], "tile": [0, 2, 5, 7, 10, 11], "distribut": [0, 2, 6, 7, 10], "daskmanag": [0, 3, 6], "type": [0, 2, 3, 8], "boundingbox": [0, 1, 2, 3, 4, 8], "workerfunct": [0, 2, 3, 4, 8], "The": [1, 2, 3, 7, 8, 11], "class": [1, 2, 3], "keep": [1, 2, 3, 7], "track": [1, 2, 3, 7], "region": [1, 2, 3, 8], "project": [1, 2, 3, 7, 8, 10, 11], "conduct": [1, 11], "when": [1, 2, 3, 6, 7, 11], "function": [1, 2, 3, 4, 8, 10, 11], "main": [1, 8], "method": [1, 2, 3, 8, 10, 11], "us": [1, 2, 3, 6, 7, 8, 9, 10, 11], "which": [1, 2, 3, 6, 7], "wrapper": [1, 10], "around": [1, 10], "rio_til": [1, 8], "clip": [1, 2, 3, 6, 7, 11], "reproject": [1, 6, 7, 10, 11], "resampl": [1, 6, 7, 11], "data": [1, 6, 7, 10, 11], "target": [1, 2, 3, 8], "resolut": [1, 7, 11], "onto": 1, "global": [1, 2, 7, 8], "1": [1, 7], "deg": 1, "lat": [1, 7], "long": 1, "grid": [1, 10], "from": [1, 2, 3, 4, 6, 7, 8, 10, 11], "import": [1, 2, 3, 4, 6, 7, 8, 9, 10], "rasterio": [1, 2, 4, 6, 7, 8, 10], "plot": [1, 2, 6, 7], "show": [1, 2, 6, 7], "180": [1, 2, 3, 6, 7], "90": [1, 6, 7], "4326": 1, "0": [1, 2, 4, 6, 7, 8, 10], "arr": [1, 2, 3, 4, 6, 7, 8, 10], "url": [1, 2, 4], "tif": [1, 2, 3, 4, 6, 7, 8, 10], "tupl": [1, 2, 3, 4, 8], "float": [1, 2, 3, 4, 6], "85": [1, 2, 3], "proj_bound": [1, 2, 6, 8], "none": [1, 2, 3, 8], "int": [1, 2, 3, 7, 8], "str": [1, 2, 3, 4, 8], "3857": [1, 2, 3], "10000": [1, 2, 3, 7], "16": [1, 2, 3], "sourc": [1, 2, 3, 6, 7, 10, 11], "base": [1, 2, 3], "object": [1, 2, 3], "initi": [1, 2, 3], "box": [1, 2, 3, 7, 8], "paramet": [1, 2, 3, 4, 7, 8, 10], "analyz": [1, 2, 3], "west": [1, 2, 4], "south": [1, 2, 4], "east": [1, 2, 4], "north": [1, 2, 4], "ignor": [1, 2, 8], "provid": [1, 3, 7, 10], "": [1, 2, 3, 7, 8], "overrid": 1, "pyproj": [1, 2, 3, 6, 10], "see": [1, 2, 3, 7], "valid": [1, 2, 3, 10], "valu": [1, 2, 3, 7, 8], "http": [1, 8, 9], "pyproj4": 1, "github": [1, 10], "io": [1, 2], "pixel": [1, 2, 3, 6, 7, 8], "size": [1, 2, 3, 6, 8], "unit": [1, 2, 3, 4, 6], "usual": [1, 2, 3], "meter": [1, 2, 3, 4, 6, 7], "degre": [1, 2, 3, 6], "number": [1, 2, 3], "addit": [1, 2, 3, 4, 8], "all": [1, 2, 3, 8], "side": [1, 2, 3], "avoid": [1, 2, 3], "edg": [1, 2, 3, 11], "effect": [1, 2, 3, 11], "ideal": [1, 2, 3], "depend": [1, 2, 3, 7, 10], "your": [1, 2, 3, 7, 10, 11], "e": [1, 2, 3, 7, 11], "g": [1, 2, 3, 7, 11], "whether": [1, 2, 3], "plan": 1, "convolut": [1, 2, 3], "distanc": [1, 2, 3, 7], "properti": [1, 2, 3, 8], "coordin": [1, 7], "ndarrai": [1, 2, 3, 4, 6], "an": [1, 2, 3, 4, 7, 8], "arrai": [1, 2, 4, 6, 7, 10], "thei": [1, 3, 6], "exist": 1, "numpi": [1, 2, 6, 7, 10], "return": [1, 2, 3, 4, 6, 7, 8, 10], "remov": 1, "rais": 1, "valueerror": 1, "If": [1, 7, 10], "shape": [1, 7], "doe": [1, 3, 10], "match": 1, "mask": [1, 6, 7], "bool": [1, 2, 3], "fals": [1, 3], "zero": [1, 7], "cover": 1, "extent": [1, 2], "includ": [1, 2, 3, 10, 11], "otherwis": 1, "standard": [1, 2, 8], "fill": 1, "geograph": [1, 2], "system": 1, "mai": [1, 2], "larger": [1, 7], "than": [1, 11], "instanti": [1, 2, 3, 8], "src": [1, 6], "sequenc": 1, "true": [1, 2, 3, 6], "kwarg": [1, 2, 3, 8], "necessari": [1, 6, 7, 8, 11], "cogread": 1, "take": [1, 2, 7, 10], "advantag": 1, "file": [1, 2], "structur": [1, 11], "intern": [1, 11], "overview": 1, "minim": 1, "amount": 1, "need": [1, 7, 10], "transfer": 1, "work": [1, 6, 10, 11], "reduc": [1, 2, 7, 8], "In": [1, 3], "gener": [1, 2, 3, 6, 8, 11], "ani": [1, 2, 3, 6, 8], "gdal": [1, 10], "path": [1, 2], "can": [1, 2, 3, 4, 7, 8, 11], "thi": [1, 2, 7, 10], "point": 1, "local": [1, 3], "virtual": 1, "howev": 1, "veri": 1, "ineffici": 1, "ar": [1, 3, 7, 11], "list": [1, 2, 3, 8], "mosaic_read": 1, "mosaic": 1, "togeth": 1, "affect": [1, 11], "how": [1, 7], "appear": 1, "mosiac": 1, "dataset": [1, 11], "keyword": [1, 2, 3, 4, 8], "argument": [1, 2, 3, 4, 8], "pass": [1, 2, 3, 4, 7, 8], "part": 1, "cogeotiff": 1, "rio": [1, 6, 10], "tiler": [1, 8, 10], "contain": [1, 2, 3, 8], "its": [1, 2, 3, 4, 7, 8, 10], "invers": [1, 7], "alpha": [1, 7], "correspond": 1, "nodata": 1, "dst": [1, 2], "creat": [1, 5, 7], "profil": 1, "open": [1, 2, 6, 7], "under": [1, 10], "hood": [1, 10], "must": [1, 2, 3], "2": [1, 2, 3, 5, 7], "3": [1, 2, 4, 7], "dimension": [1, 2], "exclud": [1, 2, 3], "befor": [1, 2, 7], "readthedoc": 1, "en": 1, "latest": 1, "topic": 1, "html": 1, "divid": [2, 3, 7], "area": [2, 7], "each": [2, 3, 4, 7], "first": [2, 3, 4, 7, 8, 10], "piec": [2, 3, 11], "handl": [2, 3, 6], "def": [2, 3, 4, 6, 7, 8, 9, 10], "my_analysi": [2, 3, 4, 6, 10], "calcul": [2, 7, 10], "bbox": [2, 6, 7, 8], "save": [2, 6, 7], "result": [2, 3, 7, 10, 11], "disk": [2, 6], "chuck_sav": 2, "output": [2, 6, 7, 10], "myanalysi": 2, "accept": [2, 3], "proj4": [2, 3], "string": [2, 3, 6], "wkt": [2, 3], "epsg": [2, 3], "code": [2, 3, 8], "f": [2, 3, 4, 8], "callabl": [2, 3, 4], "f_arg": [2, 3, 4, 8], "iter": [2, 3, 8], "f_kwarg": [2, 3, 4, 8], "map": [2, 3, 4, 7, 8, 11], "chunksiz": [2, 3, 6, 7, 10], "512": [2, 3, 10], "most": 2, "comput": [2, 3, 4, 5, 7, 8], "sequenti": [2, 6], "trade": 2, "time": [2, 4], "memori": [2, 3], "footprint": 2, "To": [2, 8], "parallel": [2, 3, 7], "dask": [2, 3, 5, 10], "estim": [2, 3], "requir": [2, 3], "given": [2, 3, 4, 10], "number_of_bands_or_arrai": [2, 3], "bit_depth": [2, 3], "reciev": [2, 3, 4, 7, 8], "dict": [2, 3, 8], "yield": [2, 3], "task": [2, 3], "attribut": 2, "ident": [2, 3], "except": [2, 3], "defin": [2, 7, 8, 11], "equival": 2, "param": [2, 6], "option": [2, 4], "eventu": 2, "complet": [2, 3, 6, 11], "instead": [2, 3], "them": [2, 7, 10], "driver": 2, "should": [2, 7], "plu": 2, "those": 2, "test": 2, "lambda": 2, "though": [2, 8], "underli": [2, 3], "By": [2, 3], "default": [2, 3, 8], "onc": 2, "overload": [2, 3, 8], "max_siz": [2, 6, 7, 8], "1024": [2, 7], "automat": [2, 7, 8, 11], "fit": [2, 7, 8], "within": [2, 7, 8], "self": [2, 8], "anal": [2, 8], "maximum": [2, 7, 8], "1024px": [2, 8], "z": [2, 8], "x": [2, 8], "y": [2, 8], "tiles": [2, 8], "256": [2, 8], "tm": [2, 8], "support": [2, 8], "non": [2, 8], "mercat": [2, 8], "scheme": [2, 8], "via": [2, 8], "morecantil": [2, 8], "web": [2, 8, 11], "process": [3, 6], "interfac": 3, "cluster": [3, 7, 10], "machin": [3, 10], "order": 3, "instal": [3, 7], "pip": [3, 7, 10], "sum": 3, "client": [3, 4, 6], "localclust": [3, 6], "total": 3, "dask_client": 3, "delai": 3, "guarante": 3, "immedi": 3, "Or": 3, "over": 3, "singl": 3, "definit": 4, "alia": 4, "agument": 4, "specif": 4, "get": [4, 7, 8], "neighborhood": 4, "mean": 4, "1km": [4, 7], "squar": [4, 7], "kernel": 4, "scipi": [4, 6], "ndimag": [4, 6], "uniform_filt": [4, 6], "source_url": 4, "kernel_s": [4, 6], "1000": [4, 6, 7], "upload": 4, "s3": 4, "bucket": 4, "memoryfil": 4, "boto3": 4, "dst_bucket": 4, "memfil": 4, "fname": 4, "output_": 4, "_": 4, "seek": 4, "upload_fileobj": 4, "union": 4, "view": 5, "jupyt": 5, "notebook": [5, 10], "quick": [5, 10], "start": [5, 11], "tutori": 5, "custom": [5, 11], "server": [5, 10], "sentinel": 5, "ndvi": 5, "stac": [5, 10], "look": [6, 7], "like": [6, 7], "follow": [6, 10], "roads_cog": [6, 7], "wgs84": [6, 10], "083333": 6, "lt": [6, 7], "ax": [6, 7], "gt": [6, 7], "np": [6, 7, 10], "print": 6, "min": 6, "max": [6, 8], "post": 6, "blob": 6, "storag": 6, "etc": 6, "128": 6, "2048": 6, "1500": 6, "job": 6, "34": 6, "99950000000001": 6, "55": 6, "00049999999999": 6, "69": 6, "99900000000002": 6, "39": 6, "longlat": 6, "datum": 6, "no_def": 6, "focal_mean": 6, "kernel_radiu": 6, "radiu": 6, "access": 6, "5": [6, 7], "set": [6, 7, 8], "up": [6, 7, 8], "connect": 6, "distributed_manag": 6, "pool": 6, "For": 7, "we": [7, 8, 9], "ll": [7, 8, 9], "nearest": 7, "road": 7, "raster": 7, "deriv": 7, "street": 7, "our": 7, "goal": 7, "molleweid": 7, "equal": [7, 8], "approach": 7, "step": 7, "There": 7, "coupl": 7, "extra": 7, "mahota": 7, "fast": [7, 11], "transform": 7, "also": [7, 8], "geopanda": 7, "geometri": 7, "quiet": [7, 8], "moll": 7, "next": 7, "try": 7, "scope": 7, "rescal": [7, 10], "re": 7, "tarket": 7, "manger": 7, "fuction": 7, "let": 7, "check": [7, 8], "what": 7, "get_road": 7, "add": [7, 8], "some": 7, "so": [7, 11], "mani": 7, "differ": [7, 10], "oper": 7, "4": 7, "euclidian": 7, "get_roads_dist": 7, "dist_2": 7, "root": 7, "dist": 7, "sqrt": 7, "sinc": 7, "want": [7, 10], "actual": 7, "multipl": 7, "measur": 7, "current": 7, "chang": 7, "just": [7, 10], "previw": 7, "imag": [7, 8], "full": [7, 10], "get_roads_dist_met": 7, "convert": 7, "dist_met": 7, "truncat": 7, "abov": 7, "10km": 7, "dist_clip": 7, "zoom": 7, "modifi": 7, "other": [7, 10], "wai": 7, "1024x1024px": 7, "6": 7, "itali": 7, "10": 7, "35": 7, "20": 7, "45": 7, "lago": 7, "7": 7, "satisfi": 7, "4096x4096": 7, "px": 7, "account": [7, 11], "might": 7, "outsid": 7, "do": 7, "rel": 7, "care": 7, "about": [7, 8], "make": 7, "avail": 7, "discard": 7, "max_dist": 7, "8": 7, "world": 7, "4096": 7, "geodatafram": 7, "edgecolor": 7, "000": 7, "bboxes_lnglat": 7, "transform_bound": 7, "direct": 7, "lng": 7, "final": 7, "9": 7, "while": 7, "one": 7, "after": 7, "nativ": [7, 10], "complex": 8, "analys": [8, 10, 11], "fly": 8, "enabl": [8, 10, 11], "matrix": 8, "give": 8, "11": 8, "pip3": 8, "12": 8, "cr": 8, "tilemanag": 8, "arg": 8, "super": 8, "tilematrixset": 8, "_proj_bound": 8, "from_user_input": 8, "obj": 8, "left": 8, "bottom": 8, "right": 8, "top": [8, 10], "updat": 8, "normal": 8, "endpoint": 8, "13": 8, "respons": 8, "util": 8, "render": [8, 11], "read_cog": 8, "exampl": 8, "png": 8, "async": 8, "img": 8, "media_typ": 8, "copi": 8, "py": 8, "uvicorn": 8, "reload": 8, "localhost": 8, "8000": 8, "learn": [8, 10], "more": [8, 11], "build": 8, "tiangolo": 8, "com": [8, 9], "stacsearch": 9, "search": 9, "scene": 9, "aw": 9, "catalog": 9, "satsearch": 9, "s2ndvi": 9, "earth": 9, "element84": 9, "v0": 9, "todo": 9, "geospati": 10, "applic": 10, "gi": 10, "remot": 10, "sens": 10, "It": 10, "two": 10, "thing": 10, "pattern": 10, "agnost": [10, 11], "dynam": 10, "input": [10, 11], "combin": 10, "surfac": 10, "familiar": 10, "scientif": 10, "tool": 10, "00083333": 10, "pypi": 10, "cogeo": 10, "creation": 10, "plugin": 10, "turn": 10, "titil": 10, "modern": 10, "built": 10, "fastapi": 10, "serv": 10, "webmap": 10, "stackstac": 10, "easier": 10, "geoprocess": 10, "leverag": 10, "power": 10, "xarrai": 10, "packag": 10, "subset": 11, "downsampl": 11, "version": 11, "themselv": 11, "call": 11, "overviw": 11, "pyramid": 11, "lower": 11, "produc": 11, "rather": 11, "forward": 11, "same": 11, "high": 11, "low": 11, "quickli": 11, "ha": 11, "512x512": 11}, "objects": {"": [[0, 0, 0, "-", "cog_worker"]], "cog_worker": [[3, 0, 0, "-", "distributed"], [2, 0, 0, "-", "manager"], [4, 0, 0, "-", "types"], [1, 0, 0, "-", "worker"]], "cog_worker.distributed": [[3, 1, 1, "", "DaskManager"]], "cog_worker.distributed.DaskManager": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "chunk_execute"], [3, 2, 1, "", "execute"]], "cog_worker.manager": [[2, 1, 1, "", "Manager"]], "cog_worker.manager.Manager": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "chunk_execute"], [2, 2, 1, "", "chunk_params"], [2, 2, 1, "", "chunk_save"], [2, 2, 1, "", "chunks"], [2, 2, 1, "", "execute"], [2, 2, 1, "", "preview"], [2, 2, 1, "", "tile"]], "cog_worker.types": [[4, 3, 1, "", "BoundingBox"], [4, 3, 1, "", "WorkerFunction"]], "cog_worker.worker": [[1, 1, 1, "", "Worker"]], "cog_worker.worker.Worker": [[1, 2, 1, "", "__init__"], [1, 4, 1, "", "bounds"], [1, 4, 1, "", "buffer"], [1, 2, 1, "", "clip_buffer"], [1, 2, 1, "", "empty"], [1, 4, 1, "", "height"], [1, 2, 1, "", "lnglat_bounds"], [1, 4, 1, "", "proj"], [1, 2, 1, "", "read"], [1, 4, 1, "", "scale"], [1, 4, 1, "", "width"], [1, 2, 1, "", "write"], [1, 2, 1, "", "xy_bounds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": 0, "submodul": 0, "content": 0, "cog_work": [1, 2, 3, 4, 6], "worker": [1, 6, 7, 10], "exampl": [1, 2, 3, 4, 5, 7, 10], "manag": [2, 8], "distribut": 3, "type": 4, "quick": 6, "start": [6, 10], "write": [6, 7], "script": 6, "1": [6, 8, 9], "defin": [6, 9], "an": 6, "analysi": [6, 7, 9, 11], "function": [6, 7, 9], "reciev": 6, "first": 6, "paramet": 6, "2": [6, 8, 9], "run": [6, 8], "your": 6, "differ": 6, "scale": 6, "project": 6, "3": [6, 8, 9], "depend": [6, 8, 9], "4": [6, 8, 9], "chunk": [6, 7, 11], "dask": [6, 9], "cluster": [6, 9], "tutori": 7, "setup": 7, "preview": [7, 9], "execut": [7, 9], "creat": 8, "custom": 8, "tile": 8, "server": 8, "instal": [8, 9, 10], "extend": 8, "class": 8, "fastapi": 8, "app": 8, "comput": [9, 11], "sentinel": 9, "ndvi": 9, "stac": 9, "cog": 10, "get": 10, "see": 10, "also": 10, "link": 10, "kei": 11, "concept": 11, "leverag": 11, "geotiff": 11, "overview": 11, "output": 11, "onli": 11, "larg": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"API Reference": [[0, "module-cog_worker"]], "Submodules": [[0, "submodules"]], "Contents": [[0, null]], "cog_worker.worker": [[1, "module-cog_worker.worker"]], "Example": [[1, null], [2, null], [3, null], [4, null], [10, "example"]], "cog_worker.manager": [[2, "module-cog_worker.manager"]], "cog_worker.distributed": [[3, "module-cog_worker.distributed"]], "cog_worker.types": [[4, "module-cog_worker.types"]], "Examples": [[5, "examples"]], "Quick start": [[6, "Quick-start"]], "Writing a cog_worker script.": [[6, "Writing-a-cog_worker-script."]], "1. Define an analysis function that recieves a cog_worker.Worker as the first parameter.": [[6, "1.-Define-an-analysis-function-that-recieves-a-cog_worker.Worker-as-the-first-parameter."]], "2. Run your analysis in different scales and projections": [[6, "2.-Run-your-analysis-in-different-scales-and-projections"]], "3. Write scale-dependent functions": [[6, "3.-Write-scale-dependent-functions"]], "4. Chunk your analysis and run it in a dask cluster": [[6, "4.-Chunk-your-analysis-and-run-it-in-a-dask-cluster"]], "Tutorial example": [[7, "Tutorial-example"]], "Setup": [[7, "Setup"]], "Writing a Worker function": [[7, "Writing-a-Worker-function"]], "Previewing analysis": [[7, "Previewing-analysis"]], "Executing analysis in chunks": [[7, "Executing-analysis-in-chunks"]], "Create a custom tile server": [[8, "Create-a-custom-tile-server"]], "1. Install dependencies": [[8, "1.-Install-dependencies"], [9, "1.-Install-dependencies"]], "2. Extend the Manager class": [[8, "2.-Extend-the-Manager-class"]], "3. Create a FastAPI app": [[8, "3.-Create-a-FastAPI-app"]], "4. Run the app": [[8, "4.-Run-the-app"]], "Compute Sentinel-2 NDVI with Stac and Dask": [[9, "Compute-Sentinel-2-NDVI-with-Stac-and-Dask"]], "2. Define the NDVI function": [[9, "2.-Define-the-NDVI-function"]], "3. Preview the analysis": [[9, "3.-Preview-the-analysis"]], "4. Execute the analysis in a Dask cluster": [[9, "4.-Execute-the-analysis-in-a-Dask-cluster"]], "Cog Worker": [[10, "cog-worker"]], "Installation": [[10, "installation"]], "Getting started": [[10, "getting-started"]], "See also": [[10, "see-also"]], "Links": [[10, "links"]], "Key concepts": [[11, "key-concepts"]], "Leverage GeoTIFF overviews": [[11, "leverage-geotiff-overviews"]], "Compute outputs only": [[11, "compute-outputs-only"]], "Chunk large analysis": [[11, "chunk-large-analysis"]]}, "indexentries": {"cog_worker": [[0, "module-cog_worker"]], "module": [[0, "module-cog_worker"], [1, "module-cog_worker.worker"], [2, "module-cog_worker.manager"], [3, "module-cog_worker.distributed"], [4, "module-cog_worker.types"]], "worker (class in cog_worker.worker)": [[1, "cog_worker.worker.Worker"]], "__init__() (cog_worker.worker.worker method)": [[1, "cog_worker.worker.Worker.__init__"]], "bounds (cog_worker.worker.worker property)": [[1, "cog_worker.worker.Worker.bounds"]], "buffer (cog_worker.worker.worker property)": [[1, "cog_worker.worker.Worker.buffer"]], "clip_buffer() (cog_worker.worker.worker method)": [[1, "cog_worker.worker.Worker.clip_buffer"]], "cog_worker.worker": [[1, "module-cog_worker.worker"]], "empty() (cog_worker.worker.worker method)": [[1, "cog_worker.worker.Worker.empty"]], "height (cog_worker.worker.worker property)": [[1, "cog_worker.worker.Worker.height"]], "lnglat_bounds() (cog_worker.worker.worker method)": [[1, "cog_worker.worker.Worker.lnglat_bounds"]], "proj (cog_worker.worker.worker property)": [[1, "cog_worker.worker.Worker.proj"]], "read() (cog_worker.worker.worker method)": [[1, "cog_worker.worker.Worker.read"]], "scale (cog_worker.worker.worker property)": [[1, "cog_worker.worker.Worker.scale"]], "width (cog_worker.worker.worker property)": [[1, "cog_worker.worker.Worker.width"]], "write() (cog_worker.worker.worker method)": [[1, "cog_worker.worker.Worker.write"]], "xy_bounds() (cog_worker.worker.worker method)": [[1, "cog_worker.worker.Worker.xy_bounds"]], "manager (class in cog_worker.manager)": [[2, "cog_worker.manager.Manager"]], "__init__() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.__init__"]], "chunk_execute() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.chunk_execute"]], "chunk_params() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.chunk_params"]], "chunk_save() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.chunk_save"]], "chunks() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.chunks"]], "cog_worker.manager": [[2, "module-cog_worker.manager"]], "execute() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.execute"]], "preview() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.preview"]], "tile() (cog_worker.manager.manager method)": [[2, "cog_worker.manager.Manager.tile"]], "daskmanager (class in cog_worker.distributed)": [[3, "cog_worker.distributed.DaskManager"]], "__init__() (cog_worker.distributed.daskmanager method)": [[3, "cog_worker.distributed.DaskManager.__init__"]], "chunk_execute() (cog_worker.distributed.daskmanager method)": [[3, "cog_worker.distributed.DaskManager.chunk_execute"]], "cog_worker.distributed": [[3, "module-cog_worker.distributed"]], "execute() (cog_worker.distributed.daskmanager method)": [[3, "cog_worker.distributed.DaskManager.execute"]], "boundingbox (in module cog_worker.types)": [[4, "cog_worker.types.BoundingBox"]], "workerfunction (in module cog_worker.types)": [[4, "cog_worker.types.WorkerFunction"]], "cog_worker.types": [[4, "module-cog_worker.types"]]}})